generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// ? = optional
// @id = primary key
// @unique = unique constraint
// @relation = foreign key constraint (fields: [field], references: [field])
// @default = default value

model User {
  id          String   @id @unique
  email       String   @unique
  displayName String
  role        Role     @default(Player)
  manager     Manager?
  managerId   String?  @unique
  player      Player?  @relation(fields: [playerId], references: [id]) 
  playerId    String?  @unique
}

model Manager {
  id          String   @id @unique
  displayName String
  teams       Team[]
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @unique
}

model Team {
  id      String   @id @unique
  name    String
  players Player[]
  manager Manager  @relation(fields: [managerId], references: [id])
  managerId String
}

model Player {
  id          String       @id @unique
  displayName String
  gamesPlayed Int
  team        Team         @relation(fields: [teamId], references: [id])
  teamId      String
  user        User?
  playerStats PlayerStat[]
}

model PlayerStat {
  id         String   @id @default(uuid())
  value      Float    // Store the actual stat value
  created_at DateTime @default(now())
  dayOfGame  String
  player     Player   @relation(fields: [playerId], references: [id])
  playerId   String   
  stat       Stat     @relation(fields: [statId], references: [id])
  statId     Int     

  @@index([playerId])
  @@index([statId])
}

model Stat {
  id          Int          @id @unique
  name        String       @unique
  playerStats PlayerStat[]
}

enum Role {
  Manager
  Player
}
